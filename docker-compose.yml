version: "2.2"

services:
  postgres:
    container_name: postgres
    image: postgres:12.2
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  zookeeper:
    container_name: zookeeper
    # must be 3.5.x
    image: zookeeper:3.5.7
    environment:
      - ZOO_MY_ID=1

  kafka:
    image: confluentinc/cp-kafka:4.1.2
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9092,EXTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://:9092,EXTERNAL://127.0.0.1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper

  coordinator:
    image: apache/druid:0.18.0
    container_name: coordinator
    depends_on: 
      - zookeeper
      - postgres
    ports:
      - "8081:8081"
    command: "coordinator"
    env_file:
      - environment

  broker:
    image: apache/druid:0.18.0
    container_name: broker
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082:8082"
    command: "broker"
    env_file:
      - environment

  historical:
    image: apache/druid:0.18.0
    container_name: historical
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083:8083"
    command: "historical"
    env_file:
      - environment

  middlemanager:
    image: apache/druid:0.18.0
    container_name: middlemanager
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091:8091"
    command: "middleManager"
    env_file:
      - environment

  router:
    image: apache/druid:0.18.0
    container_name: router
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command: "router"
    env_file:
      - environment
